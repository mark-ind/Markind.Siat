//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.732.0 using the following command:
// xscgen -o src/Facturas --nc --nu --cn -n =Markind.Siat.Generated res/facturas/facturaComputarizadaAlquilerBienInmueble.xsd res/facturas/facturaComputarizadaCompraVenta.xsd res/facturas/facturaElectronicaAlquilerBienInmueble.xsd res/facturas/facturaElectronicaCompraVenta.xsd
namespace Markind.Siat.Generated
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("facturaComputarizadaAlquilerBienInmueble", Namespace="", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("facturaComputarizadaAlquilerBienInmueble", Namespace="")]
    public partial class FacturaComputarizadaAlquilerBienInmueble
    {
        
        [RequiredAttribute()]
        [XmlElementAttribute("cabecera")]
        public FacturaComputarizadaAlquilerBienInmuebleCabecera Cabecera { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<FacturaComputarizadaAlquilerBienInmuebleDetalle> detalle;
        
        [RequiredAttribute()]
        [XmlElementAttribute("detalle")]
        public Collection<FacturaComputarizadaAlquilerBienInmuebleDetalle> Detalle
        {
            get
            {
                return detalle;
            }
            private set
            {
                detalle = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FacturaComputarizadaAlquilerBienInmueble" /> class.</para>
        /// </summary>
        public FacturaComputarizadaAlquilerBienInmueble()
        {
            this.detalle = new Collection<FacturaComputarizadaAlquilerBienInmuebleDetalle>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("FacturaComputarizadaAlquilerBienInmuebleCabecera", Namespace="", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class FacturaComputarizadaAlquilerBienInmuebleCabecera
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "9999999999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("nitEmisor")]
        public ulong NitEmisor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(200)]
        [RequiredAttribute()]
        [XmlElementAttribute("razonSocialEmisor")]
        public string RazonSocialEmisor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 25.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(25)]
        [RequiredAttribute()]
        [XmlElementAttribute("municipio")]
        public string Municipio { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 25.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(25)]
        [RequiredAttribute()]
        [XmlElementAttribute("telefono", IsNullable=true)]
        public string Telefono { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "9999999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroFactura")]
        public ulong NumeroFactura { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("cuf")]
        public string Cuf { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("cufd")]
        public string Cufd { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "9999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoSucursal")]
        public ushort CodigoSucursal { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(500)]
        [RequiredAttribute()]
        [XmlElementAttribute("direccion")]
        public string Direccion { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "9999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoPuntoVenta", IsNullable=true)]
        public Nullable<ushort> CodigoPuntoVenta { get; set; }
        
        [RequiredAttribute()]
        [XmlElementAttribute("fechaEmision", DataType="dateTime")]
        public DateTime FechaEmision { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(500)]
        [RequiredAttribute()]
        [XmlElementAttribute("nombreRazonSocial", IsNullable=true)]
        public string NombreRazonSocial { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 5.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "5", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoTipoDocumentoIdentidad")]
        public byte CodigoTipoDocumentoIdentidad { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(20)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroDocumento")]
        public string NumeroDocumento { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 5.</para>
        /// </summary>
        [MaxLengthAttribute(5)]
        [RequiredAttribute()]
        [XmlElementAttribute("complemento", IsNullable=true)]
        public string Complemento { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoCliente")]
        public string CodigoCliente { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(50)]
        [RequiredAttribute()]
        [XmlElementAttribute("periodoFacturado")]
        public string PeriodoFacturado { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 308.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "308", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoMetodoPago")]
        public ushort CodigoMetodoPago { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999999999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "9999999999999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroTarjeta", IsNullable=true)]
        public Nullable<ulong> NumeroTarjeta { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoTotal")]
        public decimal MontoTotal { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoTotalSujetoIva")]
        public decimal MontoTotalSujetoIva { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 154.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "154", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoMoneda")]
        public byte CodigoMoneda { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("tipoCambio")]
        public decimal TipoCambio { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoTotalMoneda")]
        public decimal MontoTotalMoneda { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("descuentoAdicional", IsNullable=true)]
        public Nullable<decimal> DescuentoAdicional { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "1", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoExcepcion", IsNullable=true)]
        public Nullable<byte> CodigoExcepcion { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(50)]
        [RequiredAttribute()]
        [XmlElementAttribute("cafc", IsNullable=true)]
        public string Cafc { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(200)]
        [RequiredAttribute()]
        [XmlElementAttribute("leyenda")]
        public string Leyenda { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("usuario")]
        public string Usuario { get; set; }
        
        [XmlIgnoreAttribute()]
        private string codigoDocumentoSector = "2";
        
        [RequiredAttribute()]
        [XmlElementAttribute("codigoDocumentoSector")]
        public string CodigoDocumentoSector
        {
            get
            {
                return codigoDocumentoSector;
            }
            set
            {
                codigoDocumentoSector = value;
            }
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("FacturaComputarizadaAlquilerBienInmuebleDetalle", Namespace="", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class FacturaComputarizadaAlquilerBienInmuebleDetalle
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(10)]
        [RequiredAttribute()]
        [XmlElementAttribute("actividadEconomica")]
        public string ActividadEconomica { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "99999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoProductoSin")]
        public uint CodigoProductoSin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(50)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoProducto")]
        public string CodigoProducto { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(500)]
        [RequiredAttribute()]
        [XmlElementAttribute("descripcion")]
        public string Descripcion { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("cantidad")]
        public decimal Cantidad { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 200.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "200", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("unidadMedida")]
        public byte UnidadMedida { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("precioUnitario")]
        public decimal PrecioUnitario { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoDescuento", IsNullable=true)]
        public Nullable<decimal> MontoDescuento { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("subTotal")]
        public decimal SubTotal { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("facturaComputarizadaCompraVenta", Namespace="", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("facturaComputarizadaCompraVenta", Namespace="")]
    public partial class FacturaComputarizadaCompraVenta
    {
        
        [RequiredAttribute()]
        [XmlElementAttribute("cabecera")]
        public FacturaComputarizadaCompraVentaCabecera Cabecera { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<FacturaComputarizadaCompraVentaDetalle> detalle;
        
        [RequiredAttribute()]
        [XmlElementAttribute("detalle")]
        public Collection<FacturaComputarizadaCompraVentaDetalle> Detalle
        {
            get
            {
                return detalle;
            }
            private set
            {
                detalle = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FacturaComputarizadaCompraVenta" /> class.</para>
        /// </summary>
        public FacturaComputarizadaCompraVenta()
        {
            this.detalle = new Collection<FacturaComputarizadaCompraVentaDetalle>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("FacturaComputarizadaCompraVentaCabecera", Namespace="", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class FacturaComputarizadaCompraVentaCabecera
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "9999999999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("nitEmisor")]
        public ulong NitEmisor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(200)]
        [RequiredAttribute()]
        [XmlElementAttribute("razonSocialEmisor")]
        public string RazonSocialEmisor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 25.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(25)]
        [RequiredAttribute()]
        [XmlElementAttribute("municipio")]
        public string Municipio { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 25.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(25)]
        [RequiredAttribute()]
        [XmlElementAttribute("telefono", IsNullable=true)]
        public string Telefono { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "9999999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroFactura")]
        public ulong NumeroFactura { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("cuf")]
        public string Cuf { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("cufd")]
        public string Cufd { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "9999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoSucursal")]
        public ushort CodigoSucursal { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(500)]
        [RequiredAttribute()]
        [XmlElementAttribute("direccion")]
        public string Direccion { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "9999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoPuntoVenta", IsNullable=true)]
        public Nullable<ushort> CodigoPuntoVenta { get; set; }
        
        [RequiredAttribute()]
        [XmlElementAttribute("fechaEmision", DataType="dateTime")]
        public DateTime FechaEmision { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(500)]
        [RequiredAttribute()]
        [XmlElementAttribute("nombreRazonSocial", IsNullable=true)]
        public string NombreRazonSocial { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 5.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "5", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoTipoDocumentoIdentidad")]
        public byte CodigoTipoDocumentoIdentidad { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(20)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroDocumento")]
        public string NumeroDocumento { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 5.</para>
        /// </summary>
        [MaxLengthAttribute(5)]
        [RequiredAttribute()]
        [XmlElementAttribute("complemento", IsNullable=true)]
        public string Complemento { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoCliente")]
        public string CodigoCliente { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 308.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "308", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoMetodoPago")]
        public ushort CodigoMetodoPago { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999999999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "9999999999999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroTarjeta", IsNullable=true)]
        public Nullable<ulong> NumeroTarjeta { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoTotal")]
        public decimal MontoTotal { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoTotalSujetoIva")]
        public decimal MontoTotalSujetoIva { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 154.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "154", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoMoneda")]
        public byte CodigoMoneda { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("tipoCambio")]
        public decimal TipoCambio { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoTotalMoneda")]
        public decimal MontoTotalMoneda { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoGiftCard", IsNullable=true)]
        public Nullable<decimal> MontoGiftCard { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("descuentoAdicional", IsNullable=true)]
        public Nullable<decimal> DescuentoAdicional { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "1", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoExcepcion", IsNullable=true)]
        public Nullable<byte> CodigoExcepcion { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(50)]
        [RequiredAttribute()]
        [XmlElementAttribute("cafc", IsNullable=true)]
        public string Cafc { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(200)]
        [RequiredAttribute()]
        [XmlElementAttribute("leyenda")]
        public string Leyenda { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("usuario")]
        public string Usuario { get; set; }
        
        [XmlIgnoreAttribute()]
        private string codigoDocumentoSector = "1";
        
        [RequiredAttribute()]
        [XmlElementAttribute("codigoDocumentoSector")]
        public string CodigoDocumentoSector
        {
            get
            {
                return codigoDocumentoSector;
            }
            set
            {
                codigoDocumentoSector = value;
            }
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("FacturaComputarizadaCompraVentaDetalle", Namespace="", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class FacturaComputarizadaCompraVentaDetalle
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(10)]
        [RequiredAttribute()]
        [XmlElementAttribute("actividadEconomica")]
        public string ActividadEconomica { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "99999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoProductoSin")]
        public uint CodigoProductoSin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(50)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoProducto")]
        public string CodigoProducto { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(500)]
        [RequiredAttribute()]
        [XmlElementAttribute("descripcion")]
        public string Descripcion { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("cantidad")]
        public decimal Cantidad { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 200.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "200", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("unidadMedida")]
        public byte UnidadMedida { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("precioUnitario")]
        public decimal PrecioUnitario { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoDescuento", IsNullable=true)]
        public Nullable<decimal> MontoDescuento { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("subTotal")]
        public decimal SubTotal { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1500.</para>
        /// </summary>
        [MaxLengthAttribute(1500)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroSerie", IsNullable=true)]
        public string NumeroSerie { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1500.</para>
        /// </summary>
        [MaxLengthAttribute(1500)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroImei", IsNullable=true)]
        public string NumeroImei { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("Signature", Namespace="http://www.w3.org/2000/09/xmldsig#", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("Signature", Namespace="http://www.w3.org/2000/09/xmldsig#")]
    public partial class Signature
    {
        
        [RequiredAttribute()]
        [XmlElementAttribute("SignedInfo")]
        public SignatureSignedInfo SignedInfo { get; set; }
        
        [RequiredAttribute()]
        [XmlElementAttribute("SignatureValue")]
        public string SignatureValue { get; set; }
        
        [RequiredAttribute()]
        [XmlElementAttribute("KeyInfo")]
        public SignatureKeyInfo KeyInfo { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("SignatureSignedInfo", Namespace="http://www.w3.org/2000/09/xmldsig#", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class SignatureSignedInfo
    {
        
        [RequiredAttribute()]
        [XmlElementAttribute("CanonicalizationMethod")]
        public SignatureSignedInfoCanonicalizationMethod CanonicalizationMethod { get; set; }
        
        [RequiredAttribute()]
        [XmlElementAttribute("SignatureMethod")]
        public SignatureSignedInfoSignatureMethod SignatureMethod { get; set; }
        
        [RequiredAttribute()]
        [XmlElementAttribute("Reference")]
        public SignatureSignedInfoReference Reference { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("SignatureSignedInfoCanonicalizationMethod", Namespace="http://www.w3.org/2000/09/xmldsig#", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class SignatureSignedInfoCanonicalizationMethod
    {
        
        [RequiredAttribute()]
        [XmlAttributeAttribute("Algorithm")]
        public string Algorithm { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("SignatureSignedInfoSignatureMethod", Namespace="http://www.w3.org/2000/09/xmldsig#", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class SignatureSignedInfoSignatureMethod
    {
        
        [RequiredAttribute()]
        [XmlAttributeAttribute("Algorithm")]
        public string Algorithm { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("SignatureSignedInfoReference", Namespace="http://www.w3.org/2000/09/xmldsig#", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class SignatureSignedInfoReference
    {
        
        [XmlIgnoreAttribute()]
        private Collection<SignatureSignedInfoReferenceTransformsTransform> transforms;
        
        [RequiredAttribute()]
        [XmlArrayAttribute("Transforms")]
        [XmlArrayItemAttribute("Transform", Namespace="http://www.w3.org/2000/09/xmldsig#")]
        public Collection<SignatureSignedInfoReferenceTransformsTransform> Transforms
        {
            get
            {
                return transforms;
            }
            private set
            {
                transforms = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignatureSignedInfoReference" /> class.</para>
        /// </summary>
        public SignatureSignedInfoReference()
        {
            this.transforms = new Collection<SignatureSignedInfoReferenceTransformsTransform>();
        }
        
        [RequiredAttribute()]
        [XmlElementAttribute("DigestMethod")]
        public SignatureSignedInfoReferenceDigestMethod DigestMethod { get; set; }
        
        [RequiredAttribute()]
        [XmlElementAttribute("DigestValue")]
        public string DigestValue { get; set; }
        
        [RequiredAttribute()]
        [XmlAttributeAttribute("URI")]
        public string URI { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("SignatureSignedInfoReferenceTransforms", Namespace="http://www.w3.org/2000/09/xmldsig#", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class SignatureSignedInfoReferenceTransforms
    {
        
        [XmlIgnoreAttribute()]
        private Collection<SignatureSignedInfoReferenceTransformsTransform> transform;
        
        [RequiredAttribute()]
        [XmlElementAttribute("Transform")]
        public Collection<SignatureSignedInfoReferenceTransformsTransform> Transform
        {
            get
            {
                return transform;
            }
            private set
            {
                transform = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SignatureSignedInfoReferenceTransforms" /> class.</para>
        /// </summary>
        public SignatureSignedInfoReferenceTransforms()
        {
            this.transform = new Collection<SignatureSignedInfoReferenceTransformsTransform>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("SignatureSignedInfoReferenceTransformsTransform", Namespace="http://www.w3.org/2000/09/xmldsig#", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class SignatureSignedInfoReferenceTransformsTransform
    {
        
        [RequiredAttribute()]
        [XmlAttributeAttribute("Algorithm")]
        public string Algorithm { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("SignatureSignedInfoReferenceDigestMethod", Namespace="http://www.w3.org/2000/09/xmldsig#", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class SignatureSignedInfoReferenceDigestMethod
    {
        
        [RequiredAttribute()]
        [XmlAttributeAttribute("Algorithm")]
        public string Algorithm { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("SignatureKeyInfo", Namespace="http://www.w3.org/2000/09/xmldsig#", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class SignatureKeyInfo
    {
        
        [RequiredAttribute()]
        [XmlElementAttribute("X509Data")]
        public SignatureKeyInfoX509Data X509Data { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("SignatureKeyInfoX509Data", Namespace="http://www.w3.org/2000/09/xmldsig#", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class SignatureKeyInfoX509Data
    {
        
        [RequiredAttribute()]
        [XmlElementAttribute("X509Certificate")]
        public string X509Certificate { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("facturaElectronicaAlquilerBienInmueble", Namespace="", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("facturaElectronicaAlquilerBienInmueble", Namespace="")]
    public partial class FacturaElectronicaAlquilerBienInmueble
    {
        
        [RequiredAttribute()]
        [XmlElementAttribute("cabecera")]
        public FacturaElectronicaAlquilerBienInmuebleCabecera Cabecera { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<FacturaElectronicaAlquilerBienInmuebleDetalle> detalle;
        
        [RequiredAttribute()]
        [XmlElementAttribute("detalle")]
        public Collection<FacturaElectronicaAlquilerBienInmuebleDetalle> Detalle
        {
            get
            {
                return detalle;
            }
            private set
            {
                detalle = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FacturaElectronicaAlquilerBienInmueble" /> class.</para>
        /// </summary>
        public FacturaElectronicaAlquilerBienInmueble()
        {
            this.detalle = new Collection<FacturaElectronicaAlquilerBienInmuebleDetalle>();
        }
        
        [RequiredAttribute()]
        [XmlElementAttribute("Signature", Namespace="http://www.w3.org/2000/09/xmldsig#")]
        public Markind.Siat.Generated.Signature Signature { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("FacturaElectronicaAlquilerBienInmuebleCabecera", Namespace="", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class FacturaElectronicaAlquilerBienInmuebleCabecera
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "9999999999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("nitEmisor")]
        public ulong NitEmisor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(200)]
        [RequiredAttribute()]
        [XmlElementAttribute("razonSocialEmisor")]
        public string RazonSocialEmisor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 25.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(25)]
        [RequiredAttribute()]
        [XmlElementAttribute("municipio")]
        public string Municipio { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 25.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(25)]
        [RequiredAttribute()]
        [XmlElementAttribute("telefono", IsNullable=true)]
        public string Telefono { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "9999999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroFactura")]
        public ulong NumeroFactura { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("cuf")]
        public string Cuf { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("cufd")]
        public string Cufd { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "9999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoSucursal")]
        public ushort CodigoSucursal { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(500)]
        [RequiredAttribute()]
        [XmlElementAttribute("direccion")]
        public string Direccion { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "9999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoPuntoVenta", IsNullable=true)]
        public Nullable<ushort> CodigoPuntoVenta { get; set; }
        
        [RequiredAttribute()]
        [XmlElementAttribute("fechaEmision", DataType="dateTime")]
        public DateTime FechaEmision { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(500)]
        [RequiredAttribute()]
        [XmlElementAttribute("nombreRazonSocial", IsNullable=true)]
        public string NombreRazonSocial { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 5.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "5", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoTipoDocumentoIdentidad")]
        public byte CodigoTipoDocumentoIdentidad { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(20)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroDocumento")]
        public string NumeroDocumento { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 5.</para>
        /// </summary>
        [MaxLengthAttribute(5)]
        [RequiredAttribute()]
        [XmlElementAttribute("complemento", IsNullable=true)]
        public string Complemento { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoCliente")]
        public string CodigoCliente { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(50)]
        [RequiredAttribute()]
        [XmlElementAttribute("periodoFacturado")]
        public string PeriodoFacturado { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 308.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "308", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoMetodoPago")]
        public ushort CodigoMetodoPago { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999999999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "9999999999999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroTarjeta", IsNullable=true)]
        public Nullable<ulong> NumeroTarjeta { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoTotal")]
        public decimal MontoTotal { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoTotalSujetoIva")]
        public decimal MontoTotalSujetoIva { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 154.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "154", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoMoneda")]
        public byte CodigoMoneda { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("tipoCambio")]
        public decimal TipoCambio { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoTotalMoneda")]
        public decimal MontoTotalMoneda { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("descuentoAdicional", IsNullable=true)]
        public Nullable<decimal> DescuentoAdicional { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "1", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoExcepcion", IsNullable=true)]
        public Nullable<byte> CodigoExcepcion { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(50)]
        [RequiredAttribute()]
        [XmlElementAttribute("cafc", IsNullable=true)]
        public string Cafc { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(200)]
        [RequiredAttribute()]
        [XmlElementAttribute("leyenda")]
        public string Leyenda { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("usuario")]
        public string Usuario { get; set; }
        
        [XmlIgnoreAttribute()]
        private string codigoDocumentoSector = "2";
        
        [RequiredAttribute()]
        [XmlElementAttribute("codigoDocumentoSector")]
        public string CodigoDocumentoSector
        {
            get
            {
                return codigoDocumentoSector;
            }
            set
            {
                codigoDocumentoSector = value;
            }
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("FacturaElectronicaAlquilerBienInmuebleDetalle", Namespace="", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class FacturaElectronicaAlquilerBienInmuebleDetalle
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(10)]
        [RequiredAttribute()]
        [XmlElementAttribute("actividadEconomica")]
        public string ActividadEconomica { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "99999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoProductoSin")]
        public uint CodigoProductoSin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(50)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoProducto")]
        public string CodigoProducto { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(500)]
        [RequiredAttribute()]
        [XmlElementAttribute("descripcion")]
        public string Descripcion { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("cantidad")]
        public decimal Cantidad { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 200.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "200", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("unidadMedida")]
        public byte UnidadMedida { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("precioUnitario")]
        public decimal PrecioUnitario { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoDescuento", IsNullable=true)]
        public Nullable<decimal> MontoDescuento { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("subTotal")]
        public decimal SubTotal { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("facturaElectronicaCompraVenta", Namespace="", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("facturaElectronicaCompraVenta", Namespace="")]
    public partial class FacturaElectronicaCompraVenta
    {
        
        [RequiredAttribute()]
        [XmlElementAttribute("cabecera")]
        public FacturaElectronicaCompraVentaCabecera Cabecera { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<FacturaElectronicaCompraVentaDetalle> detalle;
        
        [RequiredAttribute()]
        [XmlElementAttribute("detalle")]
        public Collection<FacturaElectronicaCompraVentaDetalle> Detalle
        {
            get
            {
                return detalle;
            }
            private set
            {
                detalle = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FacturaElectronicaCompraVenta" /> class.</para>
        /// </summary>
        public FacturaElectronicaCompraVenta()
        {
            this.detalle = new Collection<FacturaElectronicaCompraVentaDetalle>();
        }
        
        [RequiredAttribute()]
        [XmlElementAttribute("Signature", Namespace="http://www.w3.org/2000/09/xmldsig#")]
        public Markind.Siat.Generated.Signature Signature { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("FacturaElectronicaCompraVentaCabecera", Namespace="", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class FacturaElectronicaCompraVentaCabecera
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "9999999999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("nitEmisor")]
        public ulong NitEmisor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(200)]
        [RequiredAttribute()]
        [XmlElementAttribute("razonSocialEmisor")]
        public string RazonSocialEmisor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 25.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(25)]
        [RequiredAttribute()]
        [XmlElementAttribute("municipio")]
        public string Municipio { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 25.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(25)]
        [RequiredAttribute()]
        [XmlElementAttribute("telefono", IsNullable=true)]
        public string Telefono { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "9999999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroFactura")]
        public ulong NumeroFactura { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("cuf")]
        public string Cuf { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("cufd")]
        public string Cufd { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "9999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoSucursal")]
        public ushort CodigoSucursal { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(500)]
        [RequiredAttribute()]
        [XmlElementAttribute("direccion")]
        public string Direccion { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "9999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoPuntoVenta", IsNullable=true)]
        public Nullable<ushort> CodigoPuntoVenta { get; set; }
        
        [RequiredAttribute()]
        [XmlElementAttribute("fechaEmision", DataType="dateTime")]
        public DateTime FechaEmision { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(500)]
        [RequiredAttribute()]
        [XmlElementAttribute("nombreRazonSocial", IsNullable=true)]
        public string NombreRazonSocial { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 5.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "5", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoTipoDocumentoIdentidad")]
        public byte CodigoTipoDocumentoIdentidad { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(20)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroDocumento")]
        public string NumeroDocumento { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 5.</para>
        /// </summary>
        [MaxLengthAttribute(5)]
        [RequiredAttribute()]
        [XmlElementAttribute("complemento", IsNullable=true)]
        public string Complemento { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoCliente")]
        public string CodigoCliente { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 308.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "308", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoMetodoPago")]
        public ushort CodigoMetodoPago { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999999999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "9999999999999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroTarjeta", IsNullable=true)]
        public Nullable<ulong> NumeroTarjeta { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoTotal")]
        public decimal MontoTotal { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoTotalSujetoIva")]
        public decimal MontoTotalSujetoIva { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 154.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "154", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoMoneda")]
        public byte CodigoMoneda { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("tipoCambio")]
        public decimal TipoCambio { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoTotalMoneda")]
        public decimal MontoTotalMoneda { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoGiftCard", IsNullable=true)]
        public Nullable<decimal> MontoGiftCard { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("descuentoAdicional", IsNullable=true)]
        public Nullable<decimal> DescuentoAdicional { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "1", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoExcepcion", IsNullable=true)]
        public Nullable<byte> CodigoExcepcion { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(50)]
        [RequiredAttribute()]
        [XmlElementAttribute("cafc", IsNullable=true)]
        public string Cafc { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(200)]
        [RequiredAttribute()]
        [XmlElementAttribute("leyenda")]
        public string Leyenda { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(100)]
        [RequiredAttribute()]
        [XmlElementAttribute("usuario")]
        public string Usuario { get; set; }
        
        [XmlIgnoreAttribute()]
        private string codigoDocumentoSector = "1";
        
        [RequiredAttribute()]
        [XmlElementAttribute("codigoDocumentoSector")]
        public string CodigoDocumentoSector
        {
            get
            {
                return codigoDocumentoSector;
            }
            set
            {
                codigoDocumentoSector = value;
            }
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.732.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("FacturaElectronicaCompraVentaDetalle", Namespace="", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    public partial class FacturaElectronicaCompraVentaDetalle
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(10)]
        [RequiredAttribute()]
        [XmlElementAttribute("actividadEconomica")]
        public string ActividadEconomica { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99999999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "99999999", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoProductoSin")]
        public uint CodigoProductoSin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(50)]
        [RequiredAttribute()]
        [XmlElementAttribute("codigoProducto")]
        public string CodigoProducto { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [MinLengthAttribute(1)]
        [MaxLengthAttribute(500)]
        [RequiredAttribute()]
        [XmlElementAttribute("descripcion")]
        public string Descripcion { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("cantidad")]
        public decimal Cantidad { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 200.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "1", "200", ConvertValueInInvariantCulture=true)]
        [RequiredAttribute()]
        [XmlElementAttribute("unidadMedida")]
        public byte UnidadMedida { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("precioUnitario")]
        public decimal PrecioUnitario { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("montoDescuento", IsNullable=true)]
        public Nullable<decimal> MontoDescuento { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 17.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [RequiredAttribute()]
        [XmlElementAttribute("subTotal")]
        public decimal SubTotal { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1500.</para>
        /// </summary>
        [MaxLengthAttribute(1500)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroSerie", IsNullable=true)]
        public string NumeroSerie { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1500.</para>
        /// </summary>
        [MaxLengthAttribute(1500)]
        [RequiredAttribute()]
        [XmlElementAttribute("numeroImei", IsNullable=true)]
        public string NumeroImei { get; set; }
    }
}
